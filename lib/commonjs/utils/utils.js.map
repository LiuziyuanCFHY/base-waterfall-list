{"version":3,"names":["_utils","require","_getProductIcon3","_config","_constants","_utils2","_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","adaptScreen","productAdapter","size","rem","exports","AdaptScreenUtils","setAdaptScreen","adapt","isInit","CHAR_TYPE","CAPITAL","LOWER","NUMBER","SPACE","CHINESE","BRACKET","CHAR_WIDTHS","getCharType","char","test","getStrWidth","str","fontSize","scale","width","Array","from","reduce","sum","charType","charWidth","Math","ceil","getNumberOfLines","priceUnit","countRecommendItemHeight","item","_item$productBizTagPo","titleWith","tmpHeight","TOTAL_HEIGHT","productBizTagPositions","payment_succeed_item_title_core","_getProductIcon","_item$productBizTagPo2","ICON_TOTAL_WIDTH","getProductIcon","HEAD_IMG_MARGIN_RIGHT","numLines","productTitle","ONE_LINE_TITLE_FONT","countCommonFoodsHeight","productModel","_productModel$product","titleWdith","COMMON_CARD_CONTENT_PADDING","COMMON_CARD_PRICE_VERTICAL_MARGIN","good_goods_title_core","_getProductIcon2","_productModel$product2","COMMON_CARD_TITLE_ICON_RIGHT_MARGIN","titleStr","brandName","COMMON_CARD_BRAND_LINE_HORIZONTAL_MARGIN","COMMON_CARD_TITLE_LINE_HEIGHT","COMMON_CARD_TITLE_TOP_PADDING","hasDescLine","soldStock","isNotEmptyString","feedBackRate","countdownInfo","COMMON_CARD_DESC_LINE_HEIGHT","COMMON_CARD_DESC_TO_TITLE_MARGIN","isTicket","itemTypeCode","ITEM_TYPE_CODE","TICKET","isSubCard","TIMECARD","isNewUser","newUser","COMMON_CARD_NEW_USER_ONE_CENT_HEIGHT","COMMON_CARD_PRICE_HEIGHT","COMMON_CARD_PRICE_TOP_MARGIN","hasPoi","poiName","COMMON_CARD_POI_HEIGHT","countWeeklyPromotionHeight","countFeedItemHeight","type","FEED_CARD_TYPE","COMMON_GOOD_CARD","data","COMMON_CARD_TITLE_FONT"],"sources":["utils.ts"],"sourcesContent":["import { rem } from '@kid-ui/krn/lib/utils';\n\nimport { getProductIcon } from './getProductIcon';\nimport { FeedGoodsInfo } from '../components/waterFallList/model';\nimport {\n    COMMON_CARD_BRAND_LINE_HORIZONTAL_MARGIN,\n    COMMON_CARD_CONTENT_PADDING,\n    COMMON_CARD_DESC_LINE_HEIGHT,\n    COMMON_CARD_DESC_TO_TITLE_MARGIN,\n    COMMON_CARD_NEW_USER_ONE_CENT_HEIGHT,\n    COMMON_CARD_POI_HEIGHT,\n    COMMON_CARD_PRICE_HEIGHT,\n    COMMON_CARD_PRICE_TOP_MARGIN,\n    COMMON_CARD_PRICE_VERTICAL_MARGIN,\n    COMMON_CARD_TITLE_FONT,\n    COMMON_CARD_TITLE_ICON_RIGHT_MARGIN,\n    COMMON_CARD_TITLE_LINE_HEIGHT,\n    COMMON_CARD_TITLE_TOP_PADDING,\n    HEAD_IMG_MARGIN_RIGHT,\n    ONE_LINE_TITLE_FONT,\n    TOTAL_HEIGHT,\n} from '../components/waterFallList/config/config';\nimport { FEED_CARD_TYPE, ITEM_TYPE_CODE } from '../constants';\nimport { isNotEmptyString } from '@locallife/utils';\n\nlet adaptScreen = true;\n\nexport const productAdapter = (size: number) => {\n    return adaptScreen ? rem(size) : size;\n};\n\nexport class AdaptScreenUtils {\n    private static isInit = false;\n    static setAdaptScreen(adapt: boolean = true) {\n        if (this.isInit) {\n            return;\n        }\n        adaptScreen = adapt;\n        this.isInit = true;\n    }\n}\n\nconst CHAR_TYPE = {\n    CAPITAL: 'capital',\n    LOWER: 'lower',\n    NUMBER: 'number',\n    SPACE: 'space',\n    CHINESE: 'chinese',\n    BRACKET: 'bracket',\n};\n\nconst CHAR_WIDTHS = {\n    [CHAR_TYPE.CAPITAL]: 11,\n    [CHAR_TYPE.LOWER]: 8.6,\n    [CHAR_TYPE.NUMBER]: 9.9,\n    [CHAR_TYPE.SPACE]: 4,\n    [CHAR_TYPE.CHINESE]: 17.3,\n    [CHAR_TYPE.BRACKET]: 5.95,\n};\n\nfunction getCharType(char: string) {\n    if (/[A-Z]/.test(char)) {\n        return CHAR_TYPE.CAPITAL;\n    } else if (/([a-z]|[\\u0021-\\u002F])/.test(char)) {\n        return CHAR_TYPE.LOWER;\n    } else if (/\\d/.test(char)) {\n        return CHAR_TYPE.NUMBER;\n    } else if (/\\s/.test(char)) {\n        return CHAR_TYPE.SPACE;\n    } else if (char === '【' || char === '】') {\n        // 直接匹配【和】\n        return CHAR_TYPE.BRACKET; // 匹配括号\n    } else {\n        return CHAR_TYPE.CHINESE;\n    }\n}\n\nconst getStrWidth = (str: string, fontSize: number) => {\n    const scale = fontSize / 17;\n    const width = Array.from(str).reduce((sum: number, char) => {\n        const charType = getCharType(char);\n        const charWidth: number = CHAR_WIDTHS[charType] * scale;\n        return sum + charWidth;\n    }, 0) as number;\n    return Math.ceil(width / fontSize) * fontSize;\n};\nconst getNumberOfLines = (str: string, fontSize: number, width: number) => {\n    // 计算⾏数\n    if (!str) {\n        return 0;\n    }\n    return Math.ceil(getStrWidth(str, fontSize) / width);\n};\n\n// 金额半角符号\nexport const priceUnit = '¥';\n\nconst countRecommendItemHeight = (\n    item: FeedGoodsInfo,\n    fontSize: number,\n    width: number,\n) => {\n    let titleWith = width; // ⼀项宽度\n    let tmpHeight = TOTAL_HEIGHT; // ⽐如⼀⾏⽂字时，⼀项的⾼度是200\n    if (item?.productBizTagPositions?.payment_succeed_item_title_core) {\n        // 如果title前⾯后图⽚就减去 图⽚的宽度\n        const ICON_TOTAL_WIDTH =\n            ((getProductIcon(\n                item?.productBizTagPositions?.payment_succeed_item_title_core,\n            )?.width || 0) as number) + HEAD_IMG_MARGIN_RIGHT;\n        titleWith -= ICON_TOTAL_WIDTH;\n    }\n    let numLines = getNumberOfLines(item.productTitle, fontSize, titleWith);\n    if (numLines > 1) {\n        // 如果获取的是2⾏就让⾼度加上⾏⽂字的⾼度\n        tmpHeight += ONE_LINE_TITLE_FONT;\n    }\n    return tmpHeight;\n};\n\n// 公共部分高度不计算，仅计算动态部分高度，用于双列竖直排布比较大小\nconst countCommonFoodsHeight = (\n    productModel: FeedGoodsInfo,\n    fontSize: number,\n    width: number,\n) => {\n    // 标题部分高度\n    let titleWdith = width - COMMON_CARD_CONTENT_PADDING * 2; // ⼀项宽度\n    let tmpHeight = width + COMMON_CARD_PRICE_VERTICAL_MARGIN;\n\n    // 如果title前⾯有图⽚就减去 图⽚的宽度\n    if (productModel?.productBizTagPositions?.good_goods_title_core) {\n        const ICON_TOTAL_WIDTH =\n            ((getProductIcon(\n                productModel?.productBizTagPositions?.good_goods_title_core,\n            )?.width || 0) as number) + COMMON_CARD_TITLE_ICON_RIGHT_MARGIN;\n        titleWdith -= ICON_TOTAL_WIDTH;\n    }\n    let titleStr = productModel?.productTitle;\n    // 如果title前⾯有品牌就减去 品牌的间隔\n    if (productModel?.brandName) {\n        titleWdith -= COMMON_CARD_BRAND_LINE_HORIZONTAL_MARGIN;\n        titleStr = productModel?.brandName + productModel?.productTitle;\n    }\n    let numLines = getNumberOfLines(titleStr, fontSize, titleWdith);\n    // 第一行标题高度底部距离 + 第一行标题高度\n    tmpHeight += COMMON_CARD_TITLE_LINE_HEIGHT + COMMON_CARD_TITLE_TOP_PADDING;\n    if (numLines > 1) {\n        // 如果获取的是2⾏就让⾼度加上⾏⽂字的⾼度\n        tmpHeight += COMMON_CARD_TITLE_LINE_HEIGHT;\n    }\n\n    // 描述部分高度\n    // 是否展示第二行描述信息(这一行和倒计时互斥)\n    const hasDescLine =\n        (productModel?.soldStock ?? -1) > 0 &&\n        isNotEmptyString(productModel?.feedBackRate ?? '') &&\n        !productModel?.countdownInfo;\n    if (hasDescLine) {\n        tmpHeight +=\n            COMMON_CARD_DESC_LINE_HEIGHT + COMMON_CARD_DESC_TO_TITLE_MARGIN;\n    }\n\n    // 价格部分高度\n    // 是否是日历票品\n    const isTicket = productModel.itemTypeCode === ITEM_TYPE_CODE.TICKET;\n    // 是否是次卡\n    const isSubCard = productModel.itemTypeCode === ITEM_TYPE_CODE.TIMECARD;\n    // 是否展示新人一分购\n    const isNewUser = !isTicket && !isSubCard && productModel.newUser;\n    if (isNewUser) {\n        tmpHeight +=\n            COMMON_CARD_NEW_USER_ONE_CENT_HEIGHT +\n            COMMON_CARD_PRICE_VERTICAL_MARGIN;\n    } else {\n        tmpHeight += COMMON_CARD_PRICE_HEIGHT + COMMON_CARD_PRICE_TOP_MARGIN;\n    }\n\n    // poi部分高度\n    const hasPoi = !!productModel?.poiName;\n    if (hasPoi) {\n        tmpHeight += COMMON_CARD_POI_HEIGHT;\n    }\n\n    return tmpHeight;\n};\n\nconst countWeeklyPromotionHeight = () => {\n    return productAdapter(234);\n};\n\n// 计算高度\nexport const countFeedItemHeight = (\n    item: any,\n    fontSize: number,\n    width: number,\n) => {\n    // 根据不同卡片类型，返回不同高度\n    if (item?.type === FEED_CARD_TYPE.COMMON_GOOD_CARD) {\n        return countCommonFoodsHeight(\n            item?.data,\n            COMMON_CARD_TITLE_FONT,\n            width,\n        );\n    } else if (item?.type === FEED_CARD_TYPE.COMMON_GOOD_CARD) {\n        return countWeeklyPromotionHeight();\n    } else {\n        return countRecommendItemHeight(item, fontSize, width);\n    }\n};\n"],"mappings":"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","ignoreList":[]}