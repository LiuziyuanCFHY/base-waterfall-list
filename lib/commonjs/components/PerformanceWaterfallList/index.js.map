{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_waterFallRowItem","_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_extends","assign","bind","arguments","length","apply","PerformanceWaterfallList","exports","memo","forwardRef","props","ref","data","numColumns","onItemLayoutDone","marginLeft","marginRight","cellInnerMargin","cellTopMargin","otherProps","_itemHeightsRef","useRef","flatListRef","update","forceUpdate","useState","listData","changeListData","useEffect","current","useImperativeHandle","flatList","refreshList","offset","animated","_flatListRef$current","scrollToOffset","forceUpdateLayout","setForceUpdateLayout","useMemo","columnHeights","Array","fill","rowData","rowIndex","rowOffsetTop","dataSource","forEach","item","index","columnIndex","idx","itemH","offsetTop","_dataSource$rowIndex","rowH","push","itemData","largestItem","sort","b","onItemHeightChange","useCallback","height","undefined","onLayout","nativeEvent","layout","renderItem","_index","createElement","cusTomRowStyle","keyExtractor","viewabilityConfig","viewAreaCoveragePercentThreshold","FlatList","horizontal","onViewableItemsChanged","_default"],"sources":["index.tsx"],"sourcesContent":["import React, {\n    useRef,\n    useState,\n    useEffect,\n    useImperativeHandle,\n    memo,\n    forwardRef,\n    useCallback,\n    useMemo,\n} from 'react';\nimport { FlatList } from 'react-native';\nimport { IWaterFallList, IWaterFallListProps, RowData, ItemData } from './type';\nimport WaterFallRowItem from './waterFallRowItem';\n\nconst PerformanceWaterfallList = memo(\n    forwardRef((props: IWaterFallListProps, ref) => {\n        const {\n            data,\n            numColumns = 2,\n            onItemLayoutDone,\n            marginLeft,\n            marginRight,\n            cellInnerMargin,\n            cellTopMargin,\n            ...otherProps\n        } = props;\n        const _itemHeightsRef = useRef<number[]>([]);\n        const flatListRef = useRef<FlatList>(null);\n\n        const [update, forceUpdate] = useState(false);\n        const [listData, changeListData] = useState<RowData[]>([]);\n\n        useEffect(() => {\n            _itemHeightsRef.current = [];\n        }, [numColumns]);\n\n        useImperativeHandle(\n            ref,\n            () => {\n                return {\n                    flatList: flatListRef.current,\n                    refreshList(offset = 0, animated = true) {\n                        _itemHeightsRef.current = [];\n                        flatListRef.current?.scrollToOffset({\n                            offset,\n                            animated,\n                        });\n                    },\n                };\n            },\n            [],\n        );\n\n        const [forceUpdateLayout, setForceUpdateLayout] = useState(0);\n\n        useMemo(() => {\n            if (!data) {\n                return;\n            }\n            if (forceUpdateLayout > 0) {\n                setForceUpdateLayout(forceUpdateLayout);\n            }\n            const columnHeights = new Array(numColumns).fill(0);\n            let rowData: ItemData[] = [];\n            let rowIndex = 0;\n            let rowOffsetTop = 0;\n            const dataSource: RowData[] = [];\n            data.forEach((item, index) => {\n                /**\n                 * 选中当前高度最小的列 将元素放在高度最小的列\n                 */\n                let columnIndex = 0;\n                for (let idx = 1; idx < numColumns; idx++) {\n                    if (columnHeights[columnIndex] > columnHeights[idx]) {\n                        columnIndex = idx;\n                        break;\n                    }\n                }\n                const itemH = _itemHeightsRef.current[index] || 0;\n                const offsetTop = columnHeights[columnIndex] || 0;\n                columnHeights[columnIndex] += itemH;\n\n                if (rowData.length === numColumns) {\n                    rowOffsetTop += dataSource[rowIndex]?.rowH || 0;\n                    rowData = [];\n                    rowIndex++;\n                }\n                rowData.push({\n                    offsetTop,\n                    itemH,\n                    index,\n                    itemData: item,\n                    columnIndex,\n                });\n\n                /**\n                 * 一行的高度由最高的item决定\n                 * 获取一行中 最高的item\n                 */\n                const largestItem = rowData.sort(\n                    (a, b) => b.itemH + b.offsetTop - (a.itemH + a.offsetTop),\n                )[0];\n\n                const rowH =\n                    largestItem.offsetTop + largestItem.itemH - rowOffsetTop;\n                dataSource[rowIndex] = {\n                    rowIndex,\n                    rowData,\n                    rowH,\n                    rowOffsetTop,\n                };\n            });\n\n            forceUpdate(false);\n            changeListData(dataSource);\n        }, [data, numColumns, forceUpdateLayout]);\n\n        /**\n         * 收集每个item的实际高度\n         */\n        const onItemHeightChange = useCallback(\n            (height: number, index: number) => {\n                if (!data) {\n                    return;\n                }\n                if (_itemHeightsRef.current[index] === height) {\n                    return;\n                }\n\n                _itemHeightsRef.current[index] = height;\n                for (let i = 0; i < data.length; i++) {\n                    if (_itemHeightsRef.current[i] === undefined) {\n                        return;\n                    }\n                }\n                /**\n                 * 所有item高度收集完毕后强制刷新页面\n                 */\n                forceUpdate(!update);\n                setForceUpdateLayout(forceUpdateLayout + 1);\n                onItemLayoutDone && onItemLayoutDone();\n            },\n            [data, forceUpdateLayout, onItemLayoutDone, update],\n        );\n\n        const onLayout = useCallback(\n            (e, index) => {\n                if (\n                    _itemHeightsRef.current[index] === undefined ||\n                    _itemHeightsRef.current[index] === 0\n                ) {\n                    onItemHeightChange(e.nativeEvent.layout.height, index);\n                }\n            },\n            [onItemHeightChange],\n        );\n\n        const renderItem = useCallback(\n            ({ item, _index }) => {\n                return (\n                    <WaterFallRowItem\n                        item={item}\n                        cusTomRowStyle={undefined}\n                        numColumns={numColumns}\n                        onLayout={onLayout}\n                        renderItem={props.renderItem}\n                        marginLeft={marginLeft}\n                        marginRight={marginRight}\n                        cellInnerMargin={cellInnerMargin}\n                        cellTopMargin={cellTopMargin}\n                    />\n                );\n            },\n            [\n                cellInnerMargin,\n                cellTopMargin,\n                marginLeft,\n                marginRight,\n                numColumns,\n                onLayout,\n                props.renderItem,\n            ],\n        );\n\n        const keyExtractor = useCallback((item, index) => `row_${index}`, []);\n\n        const viewabilityConfig = useMemo(() => {\n            return {\n                viewAreaCoveragePercentThreshold: 1,\n            };\n        }, []);\n\n        return (\n            <FlatList\n                keyExtractor={keyExtractor}\n                {...otherProps}\n                ref={flatListRef}\n                horizontal={false}\n                numColumns={1}\n                data={listData}\n                renderItem={renderItem}\n                viewabilityConfig={viewabilityConfig}\n                onViewableItemsChanged={props.onViewableItemsChanged}\n            />\n        );\n    }),\n);\n\nexport default memo(\n    forwardRef<IWaterFallList, IWaterFallListProps>(PerformanceWaterfallList),\n);\n\nexport { PerformanceWaterfallList };\n"],"mappings":"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","ignoreList":[]}